/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-18 08:10:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import LF.review.model.vo.*;
import java.util.*;

public final class review_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("LF.review.model.vo");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

/*	Seller s = (Seller)request.getAttribute("seller"); 
	//로그인 된 정보에서 Seller 계정 가져오기

 	String bName = s.getbName();
	String bNum = s.getbNum();
	String cpNum = s.getCpNum();
	
	//물품판매 권한 승인 여부에 따라 문구가 달라야 함
	String bStatus = s.getbStatus() != 'Y' ? "판매 권한 검토중입니다" : "승인 완료";
	
	String bankName = s.getBankName();
	String acNum = s.getAcName();
	String acName = s.getAcName();
	int fId = s.getfId();	//사업자 등록증 봐야 할 거 같다고 생각되면 파일 불러오는거 구현해야 함  */
	
	//리뷰 리스트 불러옴
	/* ArrayList<Review> rList = (ArrayList<Review>)request.getAttribute("rList"); */
	
	Review rv = new Review();
	
	int reId = 123;
	String reContent = "리뷰내용테두리 만드는 속성 테두리는 border 속성으로 만듭니다. table, th, td 요소에 적용할 수 있습니다. tr 요소에는 적용되지 않습니다. 기본 모양 아무런 꾸밈을 하지 ...";
	int grade = 3;
	char status = 'y';
	int sale_Id = 5353;
	int cId = 59;
	String review_Date = "작성일자";
	
	

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"outer\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<h2 align=\"center\">상품 리뷰 확인</h2>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 공지사항 때와 마찬가지로 검색 부분이 있다. 기능 구현은 생략 -->\r\n");
      out.write("\t\t<div class=\"searchArea\" align=\"center\">\r\n");
      out.write("\t\t\t<select id=\"searchCondition\" name=\"searchCondition\">\r\n");
      out.write("\t\t\t\t<option>----</option>\r\n");
      out.write("\t\t\t\t<option value=\"category\">상품명</option>\r\n");
      out.write("\t\t\t\t<option value=\"writer\">작성자</option>\r\n");
      out.write("\t\t\t\t<option value=\"title\">내용</option>\r\n");
      out.write("\t\t\t\t<option value=\"content\">별점</option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"search\">\r\n");
      out.write("\t\t\t<button type=\"submit\">검색하기</button>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 추천순, 최신순 정렬 만들기 -->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 공지사항 때와는 다르게 여기선 로그인을 한 사람만 게시글을 작성하게 하자 -->\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<!-- boardInsertForm.jsp 만들러 ㄱㄱ씽 -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"tableArea\">\r\n");
      out.write("\t\t\t<table id=\"reviewTable\" align=\"center\" width=\"90%\" border=\"1px solid black\" style=\"border-collapse:collapse\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\" width=\"60%\" >");
      out.print(reId );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"1\" width=\"30%\">");
      out.print(grade );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td width=\"45%\">");
      out.print(sale_Id );
      out.write(" </td>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\" align=\"right\" >");
      out.print(review_Date );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"4\" width=\"90%\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(reContent );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<br><div align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t\t<button>신고하기</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"tt\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\r\n");
      out.write("\tvar page = 1;\r\n");
      out.write("\t\r\n");
      out.write("\t//값 받아오는거는 for문 돌리든 해서 넣기.\r\n");
      out.write("\tvar reId = ");
      out.print(reId);
      out.write(";\r\n");
      out.write("\tvar grade = ");
      out.print(grade);
      out.write(";\r\n");
      out.write("\tvar sale_Id = ");
      out.print(sale_Id);
      out.write(";\r\n");
      out.write("\tvar review_Date = \"");
      out.print(review_Date);
      out.write("\";\r\n");
      out.write("\tvar reContent = \"");
      out.print(reContent);
      out.write("\";\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t $(document).ready(function(){\r\n");
      out.write("\t\t \tif($(\"body\").height() < $(window).height()){\t//화면에 표시된 내용이 적어서 스크롤바가 생기지 않는 경우\r\n");
      out.write("\t\t \t\twindow.alert(\"There isn't a vertical scroll bar\");\r\n");
      out.write("\t\t \t}\r\n");
      out.write("\t\t $(window).scroll(function(){\t//스크롤 이벤트 \r\n");
      out.write("\t\t\tif($(window).scrollTop() == $(document).height() - $(window).height()){\t//스크롤바 바닥까지 내려가면 내용 추가\r\n");
      out.write("\t\t\t\tconsole.log(++page);\r\n");
      out.write("\t\t\t\t$(\".tableArea\").append(\"<h1>Page\" + page + \"</h1>\");\r\n");
      out.write("\t\t\t\t$(\".tableArea\").append(\"<hr><table align='center' width='90%' border='1px solid black' style='border-collapse:collapse'>\"\r\n");
      out.write("\t\t\t\t\t\t+ \"<tr><td colspan='3' width='60%' >\" + reId + \"</td><td colspan='1' width='30%'>\" + grade + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\t\t+ \"<tr><td width='45%'>\" + sale_Id + \"</td><td colspan='3' align='right'>\" + review_Date + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\t\t+ \"<tr><td colspan='4' width='90%'>\" + reContent + \"<br><div align='right'><button>신고하기</button></div></td></tr>\"\r\n");
      out.write("\t\t\t\t\t\t+ \"</table>\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//추가해야 할 내용\r\n");
      out.write("\t\t\t\t//초기에 데이터 몇개나 불러올 것인지(되도록 스크롤바가 생길 수 있는 만큼의 값을 불러와야 함[대충 5개에서 10개 생각함])\r\n");
      out.write("\t\t\t\t//스크롤 끝까지 닿으면 새로운 데이터 n개 불러온다\r\n");
      out.write("\t\t\t\t//데이터가 더 이상 없으면 '데이터가 없음'을 알려줘야 한다\r\n");
      out.write("\t\t\t\t//https://velopert.com/1890\r\n");
      out.write("\t\t\t\t//https://sir.kr/qa/212594\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t });\r\n");
      out.write("\t });\r\n");
      out.write("\t \r\n");
      out.write("\t \r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
