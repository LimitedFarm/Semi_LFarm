/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-18 09:24:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.seller;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import LF.seller.model.vo.Seller;

public final class acpopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("LF.seller.model.vo.Seller");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	String bankName = request.getParameter("bankName");
	String acNum = request.getParameter("acNum");
	String acName = request.getParameter("acName");
	System.out.println(bankName + acNum + acName);

	String bank_code_std = "098";
	String account_num = "0001230000678";
	String account_holder_info = "8801012";
	String tran_dtime = "20160310101921";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h1>사업자 정보 변경</h1>\r\n");
      out.write("\t<form id=\"updateForm\">\r\n");
      out.write("\t\t<table border:1px gray solid>\r\n");
      out.write("\t\t\t<!-- <tr>\r\n");
      out.write("\t\t\t\t<td><label>은행명</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" maxlength=\"13\" id=\"bName\" name=\"bName\" onclick=\"getParameter()\"></td>\r\n");
      out.write("\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label>입금계좌</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" maxlength=\"13\" id=\"account_num\" name=\"account_num\"></td>\r\n");
      out.write("\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label>예금주</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" maxlength=\"13\" id=\"account_holder_info\" name=\"account_holder_info\"></td>\r\n");
      out.write("\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label>요청일시</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" maxlength=\"13\" id=\"tran_dtime\" name=\"tran_dtime\"></td>\r\n");
      out.write("\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t</tr> -->\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"bank_code_std\" value=\"");
      out.print(bank_code_std);
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"account_num\" value=\"");
      out.print(account_num);
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"account_holder_info\"\r\n");
      out.write("\t\t\t\tvalue=\"");
      out.print(account_holder_info);
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"tran_dtime\" value=\"");
      out.print(tran_dtime);
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<p id=\"demo\"></p>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div class=\"btns\" align=\"center\">\r\n");
      out.write("\t\t\t<button id=\"account\" onclick=\"account();\">변경하기</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tfunction account(){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t  var xhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t\t\t  xhttp.onreadystatechange = function() {\r\n");
      out.write("\t\t\t\t    if (this.readyState == 4 && this.status == 200) {\r\n");
      out.write("\t\t\t\t      //document.getElementById(\"print\").innerHTML = this.responseText;\r\n");
      out.write("\t\t\t\t      \r\n");
      out.write("\t\t\t\t      \r\n");
      out.write("\t\t\t\t      \r\n");
      out.write("\t\t\t\t      $.ajax({\r\n");
      out.write("\t\t\t            type:\"post\",\r\n");
      out.write("\t\t\t            url:\"https://openapi.open-platform.or.kr/inquiry/real_name\",\r\n");
      out.write("\t\t\t            header:{\"Authorization\":\"Bearer 3ceWXJKLg8IzCXEHLYL9iAyZ7iJirRAtTx4YlP48\"},\r\n");
      out.write("\t\t\t            success:function(json){\r\n");
      out.write("\t\t\t                var list = $.parseJSON(json);\r\n");
      out.write("\t\t\t                var listLen = list.length;\r\n");
      out.write("\t\t\t                var contentStr = \"\";\r\n");
      out.write("\t\t\t                for(var i=0; i<listLen; i++){\r\n");
      out.write("\t\t\t                    contentStr += \"[기호\"+ list[i].no+\"] \"+ list[i].name + \"후보(\" + list[i].job + \")</br>\";\r\n");
      out.write("\t\t\t                }\r\n");
      out.write("\t\t\t                $(\"#demo\").append(json);\r\n");
      out.write("\t\t\t                $(\"#demo\").append(contentStr);\r\n");
      out.write("\t\t\t            }\r\n");
      out.write("\t\t\t        })\r\n");
      out.write("\t/* \r\n");
      out.write("\t\t\t\t      xmlDoc = xhttp.responseXML;\r\n");
      out.write("\t\t\t\t      txt = \"\";\r\n");
      out.write("\t\t\t\t      x = xmlDoc.getElementsByTagName(\"ARTIST\");\r\n");
      out.write("\t\t\t\t      for (i = 0; i < x.length; i++) {\r\n");
      out.write("\t\t\t\t        txt += x[i].childNodes[0].nodeValue + \"<br>\";\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t      $(\"#demo\").val()= txt; */\r\n");
      out.write("\t\t\t\t      \r\n");
      out.write("\t\t\t\t      \r\n");
      out.write("\t\t\t\t     /*  var type = request.getResponseHeader(\"Content-Type\");\r\n");
      out.write("\t\t\t\t\t\t//HTML 문서 형식은 받을 수 없으므로, 형식을 확인한다.\r\n");
      out.write("\t\t\t\t\t\tif(type.indexOf(\"xml\") !== -1 && request.responseXML) {\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t//문서 형식일 때\r\n");
      out.write("\t\t\t\t\t\t\t//callback(request.responseXML);\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#demo\").val()=xhttp.responseXML;\r\n");
      out.write("\t\t\t\t\t\t\t} else if(type === \"application/json\") {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// JSON 형식일 때\r\n");
      out.write("\t\t\t\t\t\t\t//callback(JSON.parse(request.responseText));\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#demo\").val()=JSON.parse(xhttp.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 문자열 형식일 때\r\n");
      out.write("\t\t\t\t\t\t\t//callback(request.responseText); \r\n");
      out.write("\t\t\t\t\t\t\t$(\"#demo\").val()=xhttp.responseText; */\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t   /* var response = JSON.parse(this.responseText);\r\n");
      out.write("\t\t\t\t\t\t  document.getElementById(\"print\").innerHTML = response.ip;  */\r\n");
      out.write("\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t  }/* \r\n");
      out.write("\t\t\t\t  xhttp.open(\"post\", \"https://openapi.open-platform.or.kr/inquiry/real_name\", false);\r\n");
      out.write("\t\t\t\t  xhttp.setRequestHeader(\"Content/json; charset=UTF-8\", \"application/json; charset=UTF-8\");\r\n");
      out.write("\t\t\t\t  xhttp.setRequestHeader(\"Authorization\", \"Bearer 3ceWXJKLg8IzCXEHLYL9iAyZ7iJirRAtTx4YlP48\");\r\n");
      out.write("\t\t\t\t  xhttp.send(); */\r\n");
      out.write("\t\t\t\t  //xhttp.open(\"POST\", \"http://ipinfo.io/json\", false);\r\n");
      out.write("\t\t\t\t  //xhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n");
      out.write("\t\t\t\t  //xhttp.send(\"fname=Henry&lname=Ford\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
